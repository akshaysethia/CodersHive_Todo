{"version":3,"sources":["components/SignUpForm.js","components/LoginComponent.js","components/AddTodoForm.js","components/HeaderComponent.js","components/TodoListComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["required","val","length","maxLength","len","SignUpForm","state","isModalOpen","isConfirmationModalOpen","isErrorModalOpen","toggleModal","setState","toggleConfirmationModal","toggleErrorModal","handleSubmit","values","user","username","password","email","axios","post","then","res","console","log","status","catch","error","Button","color","onClick","className","Modal","isOpen","this","toggle","style","ModalBody","ModalHeader","onSubmit","Label","htmlFor","text","model","id","name","placeholder","validators","minLength","show","messages","type","value","React","Component","Login","onNameSubmit","event","preventDefault","data","props","_id","onEmailChange","target","onPasswordChange","height","Form","Input","onChange","autoComplete","ADDTODOFORM","addtask","background","fontWeight","select","defaultValue","textarea","rows","Header","onaddTask","task","onSignOut","localStorage","clear","window","location","href","Fragment","Jumbotron","fluid","userName","TodoList","duedatefilter","labelfilter","searchfilter","updateStatus","todo","todolist","todos","i","userid","category","remarks","duedate","archived","changes","deleteItem","delete","response","deletion","err","onLabelDropdownSelected","onDateDropdownSelected","onTaskSearch","sortByDueDate","order","sort","a","b","n1","Intl","DateTimeFormat","year","month","day","format","Date","parse","n2","tasks","filter","toLowerCase","includes","map","key","Card","CardHeader","CardBody","CardText","CardSubtitle","totaltodos","Spinner","width","label","Main","getTodos","get","params","onListChanges","Container","loading","App","onNameEntered","padding","Boolean","hostname","match","ReactDOM","render","particles","number","density","enable","value_area","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e4eae369.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Label, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => {\r\n  return (val && val.length);\r\n}\r\n  \r\nconst maxLength = (len) => (val) => {\r\n  return (!(val) || (val.length <= len));\r\n}\r\n\r\nconst minLength = (len) => (val) => {\r\n  return ( val && (val.length >= len));\r\n}\r\n\r\nclass SignUpForm extends React.Component {\r\n\r\n  state = {\r\n    isModalOpen: false,\r\n    isConfirmationModalOpen: false,\r\n    isErrorModalOpen: false\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n\r\n  toggleConfirmationModal = () => {\r\n      this.setState({\r\n          isConfirmationModalOpen: !this.state.isConfirmationModalOpen\r\n      })\r\n  }\r\n\r\n  toggleErrorModal = () => {\r\n    this.setState({\r\n      isErrorModalOpen: !this.state.isErrorModalOpen\r\n    })\r\n  }\r\n  \r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n\r\n      const user = {\r\n        username: values.username,\r\n        password: values.password,\r\n        email: values.email\r\n      }\r\n      \r\n      //this.props.enterName(user.username);\r\n      axios.post('http://localhost:5001/users/add', user)\r\n        .then(res => {\r\n          this.toggleConfirmationModal();\r\n          console.log(res.status)\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          this.toggleErrorModal();\r\n        });\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n      <div>\r\n        <Button color=\"danger\" onClick={() => this.toggleModal()}>\r\n          <span className=\"fa fa-user-plus\"></span> Sign Up\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isConfirmationModalOpen} toggle={this.toggleConfirmationModal} \r\n          style={{color:'black'}} className=\"modal-dialog modal-dialog-centered\">\r\n          \r\n          <ModalBody><h3>You are successfully resgistered.</h3></ModalBody>\r\n          <Button color=\"primary\" onClick={() => this.toggleConfirmationModal()}>Close</Button>\r\n        </Modal>\r\n\r\n        <Modal isOpen={this.state.isErrorModalOpen} toggle={this.toggleErrorModal} \r\n          style={{color:'black'}} className=\"modal-dialog modal-dialog-centered\">\r\n          \r\n          <ModalBody><h3>Sorry this email id is already in use. </h3></ModalBody>\r\n          <Button color=\"primary\" onClick={() => this.toggleErrorModal()}>Close</Button>\r\n        </Modal>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} \r\n          style={{color:'black'}} className=\"modal-dialog modal-dialog-centered\">\r\n          <ModalHeader toggle={this.toggleModal}>Sign Up</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"username\">Name</Label>\r\n                <Control.text model=\".username\" id=\"username\"\r\n                  name=\"username\" placeholder=\"Enter name\"\r\n                  className=\"form-control\" \r\n                  validators={{ minLength: minLength(3), \r\n                    maxLength: maxLength(15)\r\n                  }}\r\n                />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".username\" show=\"touched\"\r\n                  messages={{minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"email\">Email</Label>\r\n                <Control type=\"email\" model=\".email\" id=\"email\"\r\n                  name=\"email\" placeholder=\"Enter email\"\r\n                  className=\"form-control\"\r\n                  validators={{ required}} />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".email\" show=\"touched\"\r\n                  messages={{ required: 'Required'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Control type=\"password\" model=\".password\" id=\"password\"\r\n                  name=\"password\" placeholder=\"Enter password\"\r\n                  className=\"form-control\"\r\n                  validators={{ required}} />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".password\" show=\"touched\"\r\n                  messages={{ required: 'Required'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Register</Button>\r\n                            \r\n            </LocalForm>\r\n              \r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SignUpForm;","import React from 'react';\r\nimport '../App.css';\r\nimport { Button, Modal, ModalBody, Input, Form } from 'reactstrap';\r\nimport axios from 'axios';\r\nimport SignUpForm from './SignUpForm';\r\n\r\nclass Login extends React.Component{\r\n\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n    isErrorModalOpen: false\r\n  }\r\n  \r\n  toggleErrorModal = () => {\r\n    this.setState({\r\n      isErrorModalOpen: !this.state.isErrorModalOpen\r\n    })\r\n  }\r\n\r\n  onNameSubmit = (event) => {\r\n      event.preventDefault();\r\n\r\n      const user = {\r\n        email: this.state.email,\r\n        password: this.state.password\r\n      }\r\n  \r\n      axios.post('http://localhost:5001/users/login', user)\r\n        .then(res => {\r\n          const data = (res.data);\r\n          //console.log(data.username)\r\n          this.props.data(data.username, data._id);\r\n        })\r\n        .catch(error => {\r\n          console.log(\"DEKHLO:\" + error)\r\n          this.toggleErrorModal();\r\n        });\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({email: event.target.value});\r\n  }\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({password: event.target.value});\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <Modal isOpen={this.state.isErrorModalOpen} toggle={this.toggleErrorModal} \r\n          style={{color:'black'}} className=\"modal-dialog modal-dialog-centered\">\r\n          \r\n          <ModalBody>User Not Found</ModalBody>\r\n          <Button color=\"primary\" onClick={() => this.toggleErrorModal()}>Close</Button>\r\n        </Modal>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <div className=\"h1\" style={{height:'auto'}}>What To Do?</div>\r\n          </div>\r\n        </div>\r\n        <Form>\r\n          <Input type=\"email\" placeholder=\"Enter your email..\"\r\n            value={this.state.email} className=\"NameInput\"\r\n            onChange={(event) => this.onEmailChange(event)} />\r\n          <br />\r\n          <Input type=\"password\" placeholder=\"Enter your password..\"\r\n            value={this.state.password} className=\"NameInput\"\r\n            onChange={(event) => this.onPasswordChange(event)} autoComplete=\"true\"/>\r\n          <br />\r\n          </Form>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-6 offset-md-3 col-md-3\">\r\n              <Button color=\"danger\" onClick={this.onNameSubmit}>\r\n                <span className=\"fa fa-sign-in\"></span> Sign In\r\n              </Button>\r\n            </div>\r\n            <div className=\"col-6 col-md-3\">\r\n              <SignUpForm/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Button, Label, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => {\r\n  return (val && val.length);\r\n}\r\n  \r\nconst maxLength = (len) => (val) => {\r\n  return (!(val) || (val.length <= len));\r\n}\r\n\r\nconst minLength = (len) => (val) => {\r\n  return ( val && (val.length >= len));\r\n}\r\n\r\nclass ADDTODOFORM extends React.Component {\r\n\r\n  state = {\r\n    isModalOpen: false,\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    });\r\n  }\r\n  \r\n  handleSubmit = (values) => {\r\n    this.toggleModal();\r\n    this.props.addtask(values);\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n      <div>\r\n        <Button style={{background:'black', fontWeight:'500'}} onClick={() => this.toggleModal()}>\r\n          <span className=\"fa fa-plus-square\"></span> Add Todo\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal} \r\n          style={{color:'black'}} className=\"modal-dialog modal-dialog-centered\">\r\n          <ModalHeader toggle={this.toggleModal}>Add Todo</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"category\">Category</Label>\r\n                <Control.select model=\".category\" name=\"category\"\r\n                  className=\"form-control\" defaultValue=\"Personal\">\r\n                  <option>Personal</option>\r\n                  <option>Work</option>\r\n                  <option>Shopping</option>\r\n                  <option>Other</option>\r\n                </Control.select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"task\">Task</Label>\r\n                <Control.text model=\".task\" id=\"task\"\r\n                  name=\"task\" placeholder=\"Enter Task\"\r\n                  className=\"form-control\" \r\n                  validators={{ minLength: minLength(3), \r\n                    maxLength: maxLength(15)\r\n                  }}\r\n                />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".task\" show=\"touched\"\r\n                  messages={{minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"duedate\">Due Date</Label>\r\n                <Control type=\"date\" model=\".duedate\" id=\"duedate\"\r\n                  name=\"duedate\" className=\"form-control\"\r\n                  validators={{ required}} />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".duedate\" show=\"touched\"\r\n                  messages={{ required: 'Required'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <Label htmlFor=\"remarks\">Remarks</Label>\r\n                <Control.textarea model=\".remarks\" id=\"remarks\" \r\n                  name=\"remarks\" rows=\"6\" \r\n                  className=\"form-control\" \r\n                  validators={{ required}}\r\n                  />\r\n\r\n                <Errors className=\"text-danger\"\r\n                  model=\".remarks\" show=\"touched\"\r\n                  messages={{ required: 'Required'\r\n                  }}\r\n                />\r\n              </div>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                            \r\n            </LocalForm>\r\n              \r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ADDTODOFORM;","import React from 'react';\r\nimport './Header.css';\r\nimport { Jumbotron, Button } from 'reactstrap';\r\n\r\nimport ADDTODOFORM from './AddTodoForm';\r\n\r\nclass Header extends React.Component{\r\n\r\n  onaddTask = (task) => {\r\n    this.props.addtask(task);\r\n  }\r\n\r\n  onSignOut = () => {\r\n    localStorage.clear();\r\n    window.location.href = '/';\r\n    // axios.delete('http://localhost:5001/users/logout')\r\n    //   .then((result) => {\r\n    //     console.log('User Logged Out Successfully !');\r\n    //   }) .catch((err) => { console.log('Error: ', err); });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <React.Fragment>\r\n        <Jumbotron fluid className=\"mb-0 headerTodo\">\r\n          \r\n          <div className=\"row no-gutters\">\r\n            <div className=\"col-12 col-md-4\">\r\n              <h1>Hello {this.props.userName} !</h1>\r\n            </div>\r\n            <div className=\"col-6 col-md-2 offset-md-4\">\r\n              <ADDTODOFORM addtask={this.onaddTask}/>\r\n            </div>\r\n            <div className=\"col-6 col-md-2\">\r\n              <Button style={{background:'black', fontWeight:'500'}} onClick={() => this.onSignOut()}>\r\n                <span className=\"fa fa-sign-out\"></span> Sign Out\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Card, CardBody, CardSubtitle, CardText, CardHeader, Input, Spinner } from 'reactstrap';\r\nimport './TodoList.css';\r\n\r\nclass TodoList extends React.Component{\r\n\r\n    state={\r\n        duedatefilter: 'Due Date Ascending',\r\n        labelfilter: 'Show All',\r\n        searchfilter: ''\r\n    }\r\n\r\n    updateStatus = (id) => {\r\n        console.log(id);\r\n        let todo;\r\n        let todolist = this.props.todos;\r\n        for(let i=0;i<todolist.length;i++){\r\n            if(todolist[i]._id===id){\r\n                if(todolist[i].status==='New'){\r\n                    todo = {\r\n                        userid: todolist[i].userid,\r\n                        category: todolist[i].category,\r\n                        task: todolist[i].task,\r\n                        status: 'In Progress',\r\n                        remarks: todolist[i].remarks,\r\n                        duedate: todolist[i].duedate,\r\n                        archived: false\r\n                    }\r\n                }\r\n                else if(todolist[i].status==='In Progress'){\r\n                    todo = {\r\n                        userid: todolist[i].userid,\r\n                        category: todolist[i].category,\r\n                        task: todolist[i].task,\r\n                        status: 'Completed',\r\n                        remarks: todolist[i].remarks,\r\n                        duedate: todolist[i].duedate,\r\n                        archived: true\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n\r\n        axios.post('http://localhost:5001/todos/update/' + id, todo)\r\n        .then(res => this.props.changes())\r\n        .catch(error => console.log(error));\r\n    }\r\n\r\n    deleteItem = (id) => {\r\n        console.log(id);\r\n        \r\n        axios.delete('http://localhost:5001/todos/'+id)\r\n        .then(response => this.props.deletion())\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    onLabelDropdownSelected = (event) => {\r\n        this.setState({labelfilter: event.target.value});\r\n    }\r\n\r\n    onDateDropdownSelected = (event) => {\r\n        \r\n        this.setState({duedatefilter: event.target.value});\r\n    }\r\n\r\n    onTaskSearch = (event) => {\r\n        this.setState({searchfilter: event.target.value});\r\n    }\r\n\r\n    sortByDueDate = (todolist,order) => { \r\n        let data = todolist;\r\n        data.sort(function(a,b){\r\n            let n1 = new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(a.duedate)));\r\n            let n2 = new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(b.duedate)))\r\n            \r\n            if(order==='des'){\r\n                if(n1<n2) return 1;\r\n                if(n1>n2) return -1\r\n                return 0;\r\n            }\r\n            else if(order==='asc'){\r\n                if(n1>n2) return 1;\r\n                if(n1<n2) return -1\r\n                return 0;\r\n            }\r\n            \r\n        })\r\n    \r\n        return data;\r\n    }\r\n\r\n\r\n    render(){\r\n        let tasks;\r\n        let todolist = this.props.todos;\r\n        this.sortByDueDate(todolist,'asc');\r\n\r\n        const { searchfilter, labelfilter, duedatefilter } = this.state;\r\n\r\n        if(searchfilter){\r\n            todolist = todolist.filter((todo) => {\r\n                return todo.task.toLowerCase().includes(searchfilter.toLowerCase());\r\n            })\r\n        }\r\n\r\n        if(labelfilter!=='Show All'){\r\n            todolist = todolist.filter((todo) => {\r\n                return todo.category.includes(labelfilter);\r\n            })\r\n        }\r\n\r\n        if(duedatefilter){\r\n            if(duedatefilter==='Due Date Descending'){\r\n                todolist = this.sortByDueDate(todolist,'des');\r\n            }\r\n        }\r\n\r\n        if(todolist.length>0){\r\n            tasks = todolist.map((todo) => {\r\n                return (\r\n                    <div className=\"col-12 col-sm-6 col-lg-4 my-2\" key={todo._id}>\r\n                        <Card className={`${(todo.status==='New') ? \"dark1\" : \"light1\"} grow`}>\r\n                            <CardHeader>{todo.task}</CardHeader>\r\n                            <CardBody>\r\n                                <CardText>Status: {todo.status}</CardText>\r\n                                <CardSubtitle>\r\n                                    Due Date: {new Intl.DateTimeFormat('en-IN', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(todo.duedate)))}\r\n                                    <br/> Label: {todo.category}</CardSubtitle>\r\n                                <CardText>Remarks: {todo.remarks}</CardText>\r\n                                <Button className=\"mr-3\" color={`${(todo.status==='New')?'warning':'success'}`} onClick={() => this.updateStatus(todo._id)}>\r\n                                    <span className={`${(todo.status==='New')?'fa fa-spinner':'fa fa-check-square-o'}`}></span>{` ${(todo.status==='New')?'In Progess':'Completed'}`}\r\n                                </Button>\r\n                                <Button color=\"danger\" onClick={() => this.deleteItem(todo._id)}>\r\n                                <span className=\"fa fa-trash\"></span> Delete\r\n                                </Button>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </div>\r\n                )\r\n            })\r\n        }\r\n        else if(todolist.length===0 && this.props.totaltodos===-1){\r\n            tasks = <h1>Loading<br /><Spinner style={{ width: '3rem', height: '3rem' }} /></h1>\r\n        }\r\n        else if(todolist.length===0 || this.props.totaltodos===0){\r\n            tasks = <h1>No Todos Available</h1>\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"container-fluid mt-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <Input type=\"text\" onChange={(event) => this.onTaskSearch(event)} label=\"Filter By Task\"\r\n                                placeholder=\"Enter Task\"/>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <Input type=\"select\" onChange={(event) => this.onLabelDropdownSelected(event)} label=\"Filter By Label\">\r\n                                <option key='0' value='Show All'>Show All</option>\r\n                                <option key='1' value='Personal'>Personal</option>\r\n                                <option key='2' value='Work'>Work</option>\r\n                                <option key='3' value='Shopping'>Shopping</option>\r\n                                <option key='4' value='Other'>Other</option>\r\n                            </Input>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <Input type=\"select\" onChange={(event) => this.onDateDropdownSelected(event)} label=\"Filter By Due Date\">\r\n                                <option key='0' value='Due Date Ascending'>Due Date Ascending</option>\r\n                                <option key='1' value='Due Date Descending'>Due Date Descending</option>\r\n                            </Input>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\" style={{color:'black'}}>\r\n                        {tasks}\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Header from './HeaderComponent';\r\nimport TodoList from './TodoListComponent';\r\nimport { Container } from 'reactstrap';\r\n\r\nclass Main extends React.Component{\r\n\r\n  state={\r\n    todolist: [],\r\n    totaltodos: -1\r\n  }\r\n\r\n  getTodos = () => {\r\n    axios.get('http://localhost:5001/todos/', {\r\n        params: {\r\n          userid: this.props.user.id,\r\n          archived: false\r\n        }\r\n      })\r\n      .then(response => {\r\n        this.setState({todolist: response.data, totaltodos: response.data.length});\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTodos();\r\n  }\r\n\r\n  onaddTask = (task) => {\r\n\r\n    const todo = {\r\n      userid: this.props.user.id,\r\n      category: task.category,\r\n      task: task.task,\r\n      remarks: task.remarks,\r\n      duedate: task.duedate\r\n    }\r\n\r\n    axios.post('http://localhost:5001/todos/add', todo)\r\n      \r\n      .then(res => this.getTodos())\r\n      .catch(err => console.log(\"Todo Error:\" + err));\r\n    \r\n  }\r\n\r\n  onListChanges = () => {\r\n    this.getTodos();\r\n  }\r\n\r\n  render(){\r\n    \r\n    return(\r\n      <React.Fragment>\r\n        <Header userName={this.props.user.userName} addtask={this.onaddTask} />\r\n        <Container fluid>\r\n        <TodoList todos={this.state.todolist} totaltodos={this.state.totaltodos} changes={this.onListChanges} deletion={this.onListChanges} loading/>\r\n        </Container>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Main;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Login from './components/LoginComponent';\r\nimport Main from './components/MainComponent';\r\n\r\nclass App extends React.Component{\r\n\r\n  state={\r\n    userName:'',\r\n    id:''\r\n  }\r\n\r\n  onNameEntered = (userName, id) => {\r\n    this.setState({userName: userName, id: id});\r\n  }\r\n\r\n  render(){\r\n    let show;\r\n    if(this.state.userName===''){\r\n      show = (<div className=\"centerName\">\r\n        <Login data={this.onNameEntered} />\r\n        </div>)\r\n    }\r\n    else{\r\n      show = <Main user={this.state} />\r\n    }\r\n\r\n    return(\r\n      <React.Fragment>\r\n        <div className=\"container-fluid App\" style={{padding:'0px'}}>\r\n          {show}\r\n        </div>\r\n        \r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'tachyons';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Particles from 'react-particles-js';\r\nconst particlesOptions = {\r\n  particles: {\r\n    number: {\r\n      value: 200,\r\n      density: {\r\n        enable: true,\r\n        value_area: 1200\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nReactDOM.render(<div><Particles className='particles' params={particlesOptions} /><App /></div>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}